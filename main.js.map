{"version":3,"sources":["./src/app/logging.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/new-account/new-account.component.ts","./src/app/new-account/new-account.component.html","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/account.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAO,MAAM,eAAe;IACxB,eAAe,CAAC,MAAc;QAC1B,OAAO,CAAC,GAAG,CAAC,6CAA6C,GAAG,MAAM,CAAC,CAAC;IACxE,CAAC;CACJ;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICK5C,iFAI0D;IAAxD,+VAAyC;IAAC,4DAAc;;;;IAFxD,2EAAe;;ADGhB,MAAM,YAAY;IAGvB,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAFpD,aAAQ,GAAqC,EAAE,CAAC;IAEM,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;IAChD,CAAC;;wEAPU,YAAY;4FAAZ,YAAY;QCVzB,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,6EAAmC;QACnC,gEACA;QAAA,wHAI4C;QAC9C,4DAAM;QACR,4DAAM;QACR,4DAAM;;QANE,0DAA2C;QAA3C,iFAA2C;;6FDItC,YAAY;cANxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aAEnC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACQ;AACQ;AACW;AACtB;AACA;;AAe7C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,gEAAe,EAAE,gEAAe,CAAC,YAJpC;YACP,uEAAa;YACb,oEAAS;SACV;mIAIU,SAAS,mBAXlB,2DAAY;QACZ,2EAAgB;QAChB,sFAAmB,aAGnB,uEAAa;QACb,oEAAS;6FAKA,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,2EAAgB;oBAChB,sFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAS;iBACV;gBACD,SAAS,EAAE,CAAC,gEAAe,EAAE,gEAAe,CAAC;gBAC7C,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AASnC,MAAM,mBAAmB;IAE9B,YAAoB,cAA+B,EAAU,cAA+B;QAAxE,mBAAc,GAAd,cAAc,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAiB;IAAI,CAAC;IAGjG,eAAe,CAAC,WAAmB,EAAE,aAAqB;QACxD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAC3D,sDAAsD;IACxD,CAAC;;sFARU,mBAAmB;mGAAnB,mBAAmB;;QCThC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAO;QAAA,uEAAY;QAAA,4DAAQ;QAC3B,yEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,+EACI;QAAA,6EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,6EAAyB;QAAA,oEAAQ;QAAA,4DAAS;QAC1C,6EAAuB;QAAA,kEAAM;QAAA,4DAAS;QAC1C,4DAAS;QACb,4DAAM;QACN,8EACI;QAD4B,kWAAS,yCAAgD,IAAC;QACtF,yEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;;6FDRO,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAiD;;;;AAS1C,MAAM,gBAAgB;IAM3B,YAAoB,eAAgC,EAAU,cAA+B;QAAzE,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAiB;IAE5F,CAAC;IAEF,OAAO,CAAC,MAAc;QACpB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC7C,iEAAiE;IACnE,CAAC;;gFAdU,gBAAgB;gGAAhB,gBAAgB;QCT7B,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,uDAAkB;QAAA,4DAAK;QAC3B,gEACA;QAAA,oEAAG;QAAA,uDAAoC;QAAA,4DAAI;QAC3C,4EAAiE;QAA5B,wIAAS,YAAQ,QAAQ,CAAC,IAAC;QAAC,0EAAe;QAAA,4DAAS;QACzF,4EAAqE;QAA9B,wIAAS,YAAQ,UAAU,CAAC,IAAC;QAAC,6EAAiB;QAAA,4DAAS;QAC/F,6EAA0D;QAA7B,yIAAS,YAAQ,SAAS,CAAC,IAAC;QAAC,4EAAgB;QAAA,4DAAS;QACvF,4DAAM;QACV,4DAAM;;QAPM,0DAAkB;QAAlB,iFAAkB;QAEnB,0DAAoC;QAApC,4GAAoC;;6FDKlC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;4LAGU,OAAO;kBAAf,mDAAK;YACG,EAAE;kBAAV,mDAAK;;;;;;;;;;;;;;AEZR;AAAA;AAAA;AAAA;AAA2C;;;AAIpC,MAAM,eAAe;IAgBxB,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAfpD,aAAQ,GAAG;YACP;gBACI,IAAI,EAAE,gBAAgB;gBACtB,MAAM,EAAE,QAAQ;aACnB;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,UAAU;aACrB;YACD;gBACI,IAAI,EAAE,gBAAgB;gBACtB,MAAM,EAAE,SAAS;aACpB;SACJ,CAAC;IAIF,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,MAAc;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IACD,aAAa,CAAC,EAAU,EAAE,MAAc;QACpC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;QAClC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;;8EA3BQ,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACHX;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["export class LoggingServices{\r\n    logStatusChange(ststus: string){\r\n        console.log('Server status has been changed, new Status:' + ststus);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\nimport { AccountServices } from './account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  // providers: [AccountServices] \n})\nexport class AppComponent implements OnInit {\n  accounts: {name: string, status: string}[] = [];\n  \n  constructor(private accountServices: AccountServices){}\n\n  ngOnInit(){\n    this.accounts = this.accountServices.accounts;\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <app-new-account></app-new-account>\n      <hr>\n      <app-account\n        *ngFor=\"let acc of accounts; let i = index\"\n        [account]=\"acc\"\n        [id]=\"i\"\n        (statusChanged)=\"onStatusChanged($event)\"></app-account>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AccountComponent } from './account/account.component';\nimport { NewAccountComponent } from './new-account/new-account.component';\nimport { LoggingServices } from './logging.service';\nimport { AccountServices } from './account.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountComponent,\n    NewAccountComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule\n  ],\n  providers: [LoggingServices, AccountServices],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { AccountServices } from '../account.service';\nimport { LoggingServices } from '../logging.service';\n\n@Component({\n  selector: 'app-new-account',\n  templateUrl: './new-account.component.html',\n  styleUrls: ['./new-account.component.css']\n})\nexport class NewAccountComponent {\n\n  constructor(private loggingService: LoggingServices, private accountService: AccountServices) { }\n\n\n  onCreateAccount(accountName: string, accountStatus: string) {\n    this.accountService.addAccount(accountName, accountStatus);\n    // this.loggingService.logStatusChange(accountStatus);\n  }\n\n  // console.log('A server status changed, new status: ' + accountStatus);\n}\n\n\n","<div class=\"row mt-4\">\n    <div class=\"col-12 border p-3\">\n        <div class=\"form-group\">\n            <label>Account Name</label>\n            <input type=\"text\" class=\"form-control\" #accountName>\n        </div>\n        <div class=\"form-group\">\n            <select class=\"form-control\" #status>\n                <option value=\"active\">Active</option>\n                <option value=\"inactive\">Inactive</option>\n                <option value=\"hidden\">Hidden</option>\n            </select>\n        </div>\n        <button class=\"btn btn-primary\" (click)=\"onCreateAccount(accountName.value, status.value)\">\n            Add Account\n        </button>\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { AccountServices } from '../account.service';\nimport { LoggingServices } from '../logging.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent {\n\n  @Input() account: {name: string, status: string};\n  @Input() id: string;\n  \n\n  constructor(private LoggingServices: LoggingServices, private accountService: AccountServices) {\n\n   }\n\n  onSetTo(status: string) {\n    this.accountService.updatedStatus(this.id, status);\n    this.LoggingServices.logStatusChange(status);\n    // console.log('A server status changed, new status: ' + status);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12 border p-3 mb-3\">\n        <h5>{{ account.name }}</h5>\n        <hr>\n        <p>This account is {{ account.status }}</p>\n        <button class=\"btn btn-success mr-3\" (click)=\"onSetTo('active')\">Set to 'active'</button>\n        <button class=\"btn btn-secondary mr-3\" (click)=\"onSetTo('inactive')\">Set to 'inactive'</button>\n        <button class=\"btn btn-dark\" (click)=\"onSetTo('unknown')\">Set to 'unknown'</button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { LoggingServices } from './logging.service';\r\n\r\n@Injectable()\r\nexport class AccountServices {\r\n    accounts = [\r\n        {\r\n            name: 'Master Account',\r\n            status: 'active'\r\n        },\r\n        {\r\n            name: 'Testaccount',\r\n            status: 'inactive'\r\n        },\r\n        {\r\n            name: 'Hidden Account',\r\n            status: 'unknown'\r\n        }\r\n    ];\r\n\r\n    constructor(private loggingservices: LoggingServices ){\r\n\r\n    }\r\n\r\n    addAccount(name: string, status: string) {\r\n        this.accounts.push({name: name, status: status});\r\n        this.loggingservices.logStatusChange(status);\r\n    }\r\n    updatedStatus(id: string, status: string){\r\n        this.accounts[id].status = status;\r\n        this.loggingservices.logStatusChange(status);\r\n    }\r\n\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}